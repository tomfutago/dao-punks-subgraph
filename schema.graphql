type _Schema_
  @fulltext(
    name: "daoPunkSearch"
    language: en
    algorithm: rank
    include: [{
      entity: "DAOpunk",
      fields: [
        { name: "name" }, { name: "archetype" }, { name: "background" }, { name: "graphic" }, { name: "color" },
        { name: "clothes" }, { name: "body" }, { name: "head" }, { name: "bonus" }
      ]
    }]
  )

type Project @entity {
  id: Bytes!
  name: String!
  symbol: String!
  totalMinted: BigInt!
  totalSales: BigInt!
  totalTransfers: BigInt!
  totalSalesWei: BigInt!
  avgSaleWei: BigInt!
  nfts: [DAOpunk!]! @derivedFrom(field: "project")
  transfers: [TransferEvent!]! @derivedFrom(field: "project")
  buyers: [Account!]!
  sellers: [Account!]!
}

type Account @entity {
  id: Bytes!
  totalBought: BigInt!
  totalBoughtWei: BigInt!
  totalSold: BigInt!
  totalSoldWei: BigInt!
  avgBoughtWei: BigInt!
  avgSoldWei: BigInt!
  totalSent: BigInt!
  totalReceived: BigInt!
  nft: [DAOpunk!] @derivedFrom(field: "currentOwner")
  sent: [TransferEvent!]! @derivedFrom(field: "from")
  received: [TransferEvent!]! @derivedFrom(field: "to")
}

type DAOpunk @entity {
  id: Bytes!
  project: Project!
  currentOwner: Account!
  totalSales: BigInt!
  totalSalesWei: BigInt!
  avgSaleWei: BigInt!
  totalTransfers: BigInt!
  transfers: [TransferEvent!]! @derivedFrom(field: "nft")
  block: BigInt!
  hash: Bytes!
  timestamp: BigInt!
  tokenID: BigInt!
  tokenURI: String!
  image: String!
  name: String!
  archetype: String
  background: String
  graphic: String
  color: String
  clothes: String
  body: String
  head: String
  bonus: String
}

type TransferEvent @entity(immutable: true) {
  id: Bytes!
  idx: BigInt!
  project: Project!
  nft: DAOpunk!
  amount: BigInt!
  from: Account!
  to: Account!
  block: BigInt!
  hash: Bytes!
  timestamp: BigInt!
  isMint: Boolean!
  isSale: Boolean!
}
